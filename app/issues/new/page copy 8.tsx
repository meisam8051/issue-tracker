// 3-19-Handling Errors
"use client"

import { Button, TextField } from '@radix-ui/themes'
import React from 'react'
import { useForm, Controller } from "react-hook-form";
import SimpleMDE from "react-simplemde-editor";
import axios from 'axios';
import "easymde/dist/easymde.min.css";
import { useRouter } from 'next/navigation';

interface IssueForm {
  title: string,
  description: string
}


const NewIssuePage = () => {
  const router =useRouter()
 
  const { register, control, handleSubmit } = useForm<IssueForm>()
  return (
    <form className='max-w-xl space-y-3' onSubmit={handleSubmit(async(data) => { 
      try {
        await axios.post("/api/issues", data) 
        router.push("/issues")        
      } catch (error) {
        console.log(error)
        //1-In the console, we get an error like this(fig 19-1).here we 
        //have the code that is set to error bad request.The message says
        //"request failed with status code of 400".Now because this is an
        //error that we anticipated in our API, here we have a response.
        //So in the "response object", in the "data property", we have 
        //the "error messages" that are generated by "Zod".
        //Go to api/issues/route copy 2.tsx
      }

      })}>
      <TextField.Root>
        <TextField.Input placeholder='title' {...register('title')} />
      </TextField.Root>
      <Controller
        name='description'
        control={control}
        render={({ field }) => <SimpleMDE placeholder='Description' {...field} />}
      />
      <Button>Submit New Issue</Button>
    </form>
  )
}


export default NewIssuePage